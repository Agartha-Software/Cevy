<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="sparse__array_8hpp" kind="file" language="C++">
    <compoundname>sparse_array.hpp</compoundname>
    <includes local="no">vector</includes>
    <includes local="no">optional</includes>
    <includes local="no">iostream</includes>
    <includedby refid="App_8hpp" local="yes">src/App.hpp</includedby>
    <includedby refid="sparse__array_8cpp" local="yes">src/sparse_array.cpp</includedby>
    <includedby refid="unittest__registery_8cpp" local="yes">test/unittest_registery.cpp</includedby>
    <includedby refid="unittest__sparse__array_8cpp" local="yes">test/unittest_sparse_array.cpp</includedby>
    <incdepgraph>
      <node id="1">
        <label>src/sparse_array.hpp</label>
        <link refid="sparse__array_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>iostream</label>
      </node>
      <node id="3">
        <label>optional</label>
      </node>
      <node id="2">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3">
        <label>src/App.cpp</label>
        <link refid="App_8cpp"/>
      </node>
      <node id="2">
        <label>src/App.hpp</label>
        <link refid="App_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>src/sparse_array.cpp</label>
        <link refid="sparse__array_8cpp"/>
      </node>
      <node id="1">
        <label>src/sparse_array.hpp</label>
        <link refid="sparse__array_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>test/unittest_registery.cpp</label>
        <link refid="unittest__registery_8cpp"/>
      </node>
      <node id="6">
        <label>test/unittest_sparse_array.cpp</label>
        <link refid="unittest__sparse__array_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classsparse__array" prot="public">sparse_array</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;optional&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Type,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Alloc<sp/>=<sp/>std::allocator&lt;Type&gt;&gt;</highlight></codeline>
<codeline lineno="8" refid="classsparse__array" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classsparse__array" kindref="compound">sparse_array</ref><sp/>{</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="10" refid="classsparse__array_1ab59fb49dcc6ca392a91c8415d17a3c3a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="classsparse__array_1ab59fb49dcc6ca392a91c8415d17a3c3a" kindref="member">value_type</ref><sp/>=<sp/>std::optional&lt;Type&gt;;</highlight></codeline>
<codeline lineno="11" refid="classsparse__array_1a65c71c4f0bcca9bbbabc85c439d887f0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="classsparse__array_1a65c71c4f0bcca9bbbabc85c439d887f0" kindref="member">reference_type</ref><sp/>=<sp/><ref refid="classsparse__array_1ab59fb49dcc6ca392a91c8415d17a3c3a" kindref="member">value_type</ref>&amp;;</highlight></codeline>
<codeline lineno="12" refid="classsparse__array_1afb0d06ca8f41e36a47d6abda28696ce8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="classsparse__array_1afb0d06ca8f41e36a47d6abda28696ce8" kindref="member">const_reference_type</ref><sp/>=<sp/><ref refid="classsparse__array_1ab59fb49dcc6ca392a91c8415d17a3c3a" kindref="member">value_type</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;;</highlight></codeline>
<codeline lineno="13" refid="classsparse__array_1a20460098dfb45eb2631d0deb1177ae66" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="classsparse__array_1a20460098dfb45eb2631d0deb1177ae66" kindref="member">container_t</ref><sp/>=<sp/>std::vector&lt;value_type&gt;;</highlight></codeline>
<codeline lineno="14" refid="classsparse__array_1ac94aeaa37c62324a106d47bbfce83235" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="classsparse__array_1ac94aeaa37c62324a106d47bbfce83235" kindref="member">size_type</ref><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>container_t::size_type;</highlight></codeline>
<codeline lineno="15" refid="classsparse__array_1ab8910446f1f23bff64119e0538f31f80" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="classsparse__array_1ab8910446f1f23bff64119e0538f31f80" kindref="member">iterator</ref><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>container_t::iterator;</highlight></codeline>
<codeline lineno="16" refid="classsparse__array_1a2e78ce85b47dc838f264d06eb893a313" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="classsparse__array_1a2e78ce85b47dc838f264d06eb893a313" kindref="member">const_iterator</ref><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>container_t::const_iterator;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsparse__array_1a20460098dfb45eb2631d0deb1177ae66" kindref="member">container_t</ref><sp/>_data;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="22" refid="classsparse__array_1a1c103f77064acfb9bd697697d0f216bb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsparse__array_1a1c103f77064acfb9bd697697d0f216bb" kindref="member">sparse_array</ref>()<sp/>:<sp/>_data(<ref refid="classsparse__array_1a20460098dfb45eb2631d0deb1177ae66" kindref="member">container_t</ref>())<sp/>{};</highlight></codeline>
<codeline lineno="23" refid="classsparse__array_1a558e48cc05e50a62f303163341e12721" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsparse__array_1a558e48cc05e50a62f303163341e12721" kindref="member">~sparse_array</ref>()<sp/>{};</highlight></codeline>
<codeline lineno="24" refid="classsparse__array_1a11505862571456071f408894c88cd091" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsparse__array_1a11505862571456071f408894c88cd091" kindref="member">sparse_array</ref>(<ref refid="classsparse__array" kindref="compound">sparse_array</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;other)<sp/>:<sp/>_data(other._data)<sp/>{};<sp/></highlight><highlight class="comment">//copy<sp/>constructor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="classsparse__array_1af3f0ab8b4ae17a9d165f87232ef558fc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsparse__array_1af3f0ab8b4ae17a9d165f87232ef558fc" kindref="member">sparse_array</ref>(<ref refid="classsparse__array" kindref="compound">sparse_array</ref><sp/>&amp;&amp;<sp/>other)<sp/>noexcept<sp/>:<sp/>_data(std::move(other._data))<sp/>{};<sp/></highlight><highlight class="comment">//move<sp/>constructor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="classsparse__array_1accb1353df68c7e0c8e9db4cd73322f4e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsparse__array" kindref="compound">sparse_array</ref><sp/>&amp;<ref refid="classsparse__array_1accb1353df68c7e0c8e9db4cd73322f4e" kindref="member">operator = </ref>(<ref refid="classsparse__array" kindref="compound">sparse_array</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;other)<sp/>{<sp/></highlight><highlight class="comment">//copy<sp/>assignment<sp/>operator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_data<sp/>=<sp/>other._data;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="classsparse__array_1a8c9a1814a5d1f212d5e943bf93ea13bf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsparse__array" kindref="compound">sparse_array</ref><sp/>&amp;<ref refid="classsparse__array_1accb1353df68c7e0c8e9db4cd73322f4e" kindref="member">operator = </ref>(<ref refid="classsparse__array" kindref="compound">sparse_array</ref><sp/>&amp;&amp;other)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="comment">//<sp/>move<sp/>assignment<sp/>operator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_data<sp/>=<sp/>other._data;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="classsparse__array_1a39d36a91d0b15a2e987f1c837d048629" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsparse__array_1a65c71c4f0bcca9bbbabc85c439d887f0" kindref="member">reference_type</ref><sp/><ref refid="classsparse__array_1a39d36a91d0b15a2e987f1c837d048629" kindref="member">operator [] </ref>(std::size_t<sp/>idx)<sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_data.at(idx);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="classsparse__array_1a75dbd79cdfe906e12a35a20a15b64d33" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsparse__array_1afb0d06ca8f41e36a47d6abda28696ce8" kindref="member">const_reference_type</ref><sp/><ref refid="classsparse__array_1a39d36a91d0b15a2e987f1c837d048629" kindref="member">operator [] </ref>(std::size_t<sp/>idx)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_data.at(idx);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="classsparse__array_1a4bc6c7de1804d3baf4b50c283cb8d9ef" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsparse__array_1ab8910446f1f23bff64119e0538f31f80" kindref="member">iterator</ref><sp/><ref refid="classsparse__array_1a4bc6c7de1804d3baf4b50c283cb8d9ef" kindref="member">begin</ref><sp/>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_data.begin();<sp/>};</highlight></codeline>
<codeline lineno="46" refid="classsparse__array_1a2f864bce00699fa68948b424848ef0d0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsparse__array_1a2e78ce85b47dc838f264d06eb893a313" kindref="member">const_iterator</ref><sp/><ref refid="classsparse__array_1a2f864bce00699fa68948b424848ef0d0" kindref="member">begin</ref><sp/>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_data.begin();<sp/>};</highlight></codeline>
<codeline lineno="47" refid="classsparse__array_1a2957e2cca0cb507bcca94cf5f487c14e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsparse__array_1a2e78ce85b47dc838f264d06eb893a313" kindref="member">const_iterator</ref><sp/><ref refid="classsparse__array_1a2957e2cca0cb507bcca94cf5f487c14e" kindref="member">cbegin</ref><sp/>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_data.cbegin();<sp/>};</highlight></codeline>
<codeline lineno="48" refid="classsparse__array_1a52a5fd8643e5df74086ae498803a6587" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsparse__array_1ab8910446f1f23bff64119e0538f31f80" kindref="member">iterator</ref><sp/><ref refid="classsparse__array_1a52a5fd8643e5df74086ae498803a6587" kindref="member">end</ref><sp/>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_data.end();<sp/>};</highlight></codeline>
<codeline lineno="49" refid="classsparse__array_1a4831b2c6ecea2d7c5a83d09e0b1840a3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsparse__array_1a2e78ce85b47dc838f264d06eb893a313" kindref="member">const_iterator</ref><sp/><ref refid="classsparse__array_1a4831b2c6ecea2d7c5a83d09e0b1840a3" kindref="member">end</ref><sp/>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_data.end();<sp/>};</highlight></codeline>
<codeline lineno="50" refid="classsparse__array_1a135e0c36a0b5b3129b1d8f2ab173c83e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsparse__array_1a2e78ce85b47dc838f264d06eb893a313" kindref="member">const_iterator</ref><sp/><ref refid="classsparse__array_1a135e0c36a0b5b3129b1d8f2ab173c83e" kindref="member">cend</ref><sp/>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_data.cend();<sp/>};</highlight></codeline>
<codeline lineno="51" refid="classsparse__array_1a5bbcaa7d68b3daf3d1cd6ebaa38c49c8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsparse__array_1ac94aeaa37c62324a106d47bbfce83235" kindref="member">size_type</ref><sp/><ref refid="classsparse__array_1a5bbcaa7d68b3daf3d1cd6ebaa38c49c8" kindref="member">size</ref><sp/>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_data.size();<sp/>};</highlight></codeline>
<codeline lineno="52" refid="classsparse__array_1a7f6c1eb2166019cc32ee73e41e3b0560" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsparse__array_1a7f6c1eb2166019cc32ee73e41e3b0560" kindref="member">resize</ref><sp/>(<ref refid="classsparse__array_1ac94aeaa37c62324a106d47bbfce83235" kindref="member">size_type</ref><sp/>len)<sp/>{<sp/>_data.resize(len,<sp/>std::nullopt);<sp/>};</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="classsparse__array_1a4a51887e0990fe78855505815f0a61d9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsparse__array_1a65c71c4f0bcca9bbbabc85c439d887f0" kindref="member">reference_type</ref><sp/><ref refid="classsparse__array_1a4a51887e0990fe78855505815f0a61d9" kindref="member">insert_at</ref>(<ref refid="classsparse__array_1ac94aeaa37c62324a106d47bbfce83235" kindref="member">size_type</ref><sp/>pos,<sp/>Type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;val)<sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pos<sp/>&gt;=<sp/>_data.size())</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_data.resize(pos<sp/>+<sp/>1,<sp/>std::nullopt);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_data[pos]<sp/>=<sp/>std::optional(val);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_data[pos];</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="classsparse__array_1a0f8cf68536f6c2da73ca0cf7acaf264f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsparse__array_1a65c71c4f0bcca9bbbabc85c439d887f0" kindref="member">reference_type</ref><sp/><ref refid="classsparse__array_1a0f8cf68536f6c2da73ca0cf7acaf264f" kindref="member">insert_at</ref>(<ref refid="classsparse__array_1ac94aeaa37c62324a106d47bbfce83235" kindref="member">size_type</ref><sp/>pos,<sp/>Type<sp/>&amp;&amp;val)<sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pos<sp/>&gt;=<sp/>_data.size())</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_data.resize(pos<sp/>+<sp/>1,<sp/>std::nullopt);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_data[pos]<sp/>=<sp/>std::optional(val);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_data[pos];</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">...<sp/>Params&gt;</highlight></codeline>
<codeline lineno="69" refid="classsparse__array_1a7249e13a8035523c5e4edd84b32fbe3b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsparse__array_1a65c71c4f0bcca9bbbabc85c439d887f0" kindref="member">reference_type</ref><sp/><ref refid="classsparse__array_1a7249e13a8035523c5e4edd84b32fbe3b" kindref="member">emplace_at</ref>(<ref refid="classsparse__array_1ac94aeaa37c62324a106d47bbfce83235" kindref="member">size_type</ref><sp/>pos,<sp/>Params<sp/>&amp;&amp;...<sp/>args)<sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsparse__array_1a4a51887e0990fe78855505815f0a61d9" kindref="member">insert_at</ref>(pos,<sp/>std::allocator_traits&lt;Alloc&gt;::construct(args...));</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73" refid="classsparse__array_1a805a005b32bd9e3006935f6137643ffb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classsparse__array_1a805a005b32bd9e3006935f6137643ffb" kindref="member">erase</ref>(<ref refid="classsparse__array_1ac94aeaa37c62324a106d47bbfce83235" kindref="member">size_type</ref><sp/>pos)<sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_data[pos]<sp/>=<sp/>std::nullopt;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77" refid="classsparse__array_1a20f5cc4369ae512c58b54783c13d60d0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classsparse__array_1a20f5cc4369ae512c58b54783c13d60d0" kindref="member">first_free</ref>()<sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>!=<sp/>_data.size();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!_data[i])<sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_data.size();</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86" refid="classsparse__array_1aa58d33a6f467121a202cf1d912b17dc2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsparse__array_1a65c71c4f0bcca9bbbabc85c439d887f0" kindref="member">reference_type</ref><sp/><ref refid="classsparse__array_1aa58d33a6f467121a202cf1d912b17dc2" kindref="member">insert</ref>(Type<sp/>&amp;&amp;val)<sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsparse__array_1a4a51887e0990fe78855505815f0a61d9" kindref="member">insert_at</ref>(<ref refid="classsparse__array_1a20f5cc4369ae512c58b54783c13d60d0" kindref="member">first_free</ref>(),<sp/>val);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90" refid="classsparse__array_1a16f536c4d613461e6dcc16a6bc668301" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::optional&lt;size_type&gt;<sp/><ref refid="classsparse__array_1a16f536c4d613461e6dcc16a6bc668301" kindref="member">get_index</ref>(<ref refid="classsparse__array_1ab59fb49dcc6ca392a91c8415d17a3c3a" kindref="member">value_type</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;elem)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsparse__array_1ab59fb49dcc6ca392a91c8415d17a3c3a" kindref="member">value_type</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*ptr<sp/>=<sp/>std::addressof(elem);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="classsparse__array_1ac94aeaa37c62324a106d47bbfce83235" kindref="member">size_type</ref><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>!=<sp/>_data.size();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ptr<sp/>==<sp/>std::addressof(_data[i]))<sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::nullopt;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="100"><highlight class="normal">};</highlight></codeline>
    </programlisting>
    <location file="src/sparse_array.hpp"/>
  </compounddef>
</doxygen>
